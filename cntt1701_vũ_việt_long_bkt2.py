# -*- coding: utf-8 -*-
"""CNTT1701_Vũ Việt Long_BKT2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_jYsj8hh_z1aJ_T2h-3_o2p3dvK2HO76
"""

import pandas as pd
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
print(df.describe())

import pandas as pd
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
print(df)

import pandas as pd
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
print(df.head())

import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
sns.histplot(df['Doanh thu'], kde=True)
plt.show()
sns.boxplot(x='Doanh thu', data=df)
plt.show()

# Thay thế giá trị thiếu bằng trung bình của cột (chỉ áp dụng với cột số)
import pandas as pd
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
df.fillna(df.mean(numeric_only=True), inplace=True)
print(df)

#
import pandas as pd
import numpy as np
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
missing_values = df.isnull().sum()
print(missing_values)
print("==============")
#Kiểm tra kiểu dữ liệu của các cột
print(df.dtypes)
# Kiểm tra các giá trị không hợp lệ trong cột số
print(df[pd.to_numeric(df['Doanh thu'], errors='coerce').isnull()])


df.fillna(20000000, inplace=True)
print(df)

import pandas as pd
import numpy as np
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
# Kiểm tra kiểu dữ liệu của các cột
print(df.dtypes)

# Kiểm tra các giá trị không hợp lệ trong cột số
print(df[pd.to_numeric(df['Doanh thu'], errors='coerce').isnull()])

import pandas as pd
import numpy as np
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')
print(df.head(10))

import pandas as pd
from google.colab import drive

# Đọc dữ liệu từ tệp Excel trong Google Drive
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')

# Tính toán các chỉ số thống kê
descriptive_stats = df.describe()

# Hiển thị kết quả
print(descriptive_stats)

from google.colab import drive
drive.mount('/content/drive')

#Đọc dữ liệu
import pandas as pd
df = pd.read_excel('/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx')

from sklearn.model_selection import train_test_split
X = df.drop('cot_muc_tieu', axis=1)
y = df['cot_muc_tieu']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from time import time
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

file_path = '/content/drive/MyDrive/CNTT1701_Vũ Việt Long_BKT2.xlsx'
df = pd.read_excel(file_path)

X = df['Số lượng bán'].values.reshape(-1, 1)
y = df['Doanh thu'].values
#Xây dựng mô hình hồi quy tuyến tính
model = LinearRegression()
model.fit(X, y)
#Dự đoán giá trị
y_pred = model.predict(X)
#tính toán hệ số hồi quy
beta_0 = model.intercept_
beta_1 = model.coef_
#đánh giá mô hình
mse = mean_squared_error(y, y_pred)
r2 = r2_score(y, y_pred)
#hiển thị kết quả
print(f'Sai số bình phương trung bình (MSE): {mse}')
print(f'Hệ số xác định R_2: {r2}')
print(f'Hệ số chặn beta_0: {beta_0}')
print(f'Hệ số dốc beta_1: {beta_1}')
print("Phương hồi quy tuyến tính: y = {beta_0} + {beta_1} * X")
#Vẽ biểu đồ
plt.scatter(X, y, color='blue')
plt.plot(X, y_pred, color='red')
plt.xlabel('Số lượng bán')
plt.ylabel('Doanh thu')
plt.title('Mô hình hồi quy tuyến tính')
plt.show()